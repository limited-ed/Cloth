// <auto-generated />
using System;
using ClothApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ClothApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200116033039_Employee")]
    partial class Employee
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0");

            modelBuilder.Entity("ClothApi.Models.Cloth", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Period")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Cloth");
                });

            modelBuilder.Entity("ClothApi.Models.Division", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ParentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Divisions");
                });

            modelBuilder.Entity("ClothApi.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClothSize")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DivisionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FullName")
                        .HasColumnType("TEXT");

                    b.Property<int>("HeadSize")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Height")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LegSize")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProfessionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TabNumber")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.HasIndex("ProfessionId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("ClothApi.Models.EmployeeCloth", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClothId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("BeginDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.HasKey("EmployeeId", "ClothId");

                    b.HasIndex("ClothId");

                    b.ToTable("EmployeeCloths");
                });

            modelBuilder.Entity("ClothApi.Models.Identity.IdentityRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Role")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("ClothApi.Models.Identity.IdentityUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Login")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ClothApi.Models.Identity.UserDivision", b =>
                {
                    b.Property<int>("DivisionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdentityUserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DivisionId", "IdentityUserId");

                    b.HasIndex("IdentityUserId");

                    b.ToTable("UserDivisions");
                });

            modelBuilder.Entity("ClothApi.Models.Profession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Professions");
                });

            modelBuilder.Entity("ClothApi.Models.ProfessionCloth", b =>
                {
                    b.Property<int>("ProfessionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClothId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProfessionId", "ClothId");

                    b.HasIndex("ClothId");

                    b.ToTable("ProfessionCloth");
                });

            modelBuilder.Entity("ClothApi.Models.Employee", b =>
                {
                    b.HasOne("ClothApi.Models.Division", "Division")
                        .WithMany()
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClothApi.Models.Profession", "Profession")
                        .WithMany()
                        .HasForeignKey("ProfessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClothApi.Models.EmployeeCloth", b =>
                {
                    b.HasOne("ClothApi.Models.Cloth", "Cloth")
                        .WithMany("EmployeeCloths")
                        .HasForeignKey("ClothId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClothApi.Models.Employee", "Employee")
                        .WithMany("EmployeeCloths")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClothApi.Models.Identity.UserDivision", b =>
                {
                    b.HasOne("ClothApi.Models.Division", "Division")
                        .WithMany("UserDivisions")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClothApi.Models.Identity.IdentityUser", "IdentityUser")
                        .WithMany("UserDivisions")
                        .HasForeignKey("IdentityUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClothApi.Models.ProfessionCloth", b =>
                {
                    b.HasOne("ClothApi.Models.Cloth", "Cloth")
                        .WithMany("ProfessionCloth")
                        .HasForeignKey("ClothId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClothApi.Models.Profession", "Profession")
                        .WithMany("ProfessionCloth")
                        .HasForeignKey("ProfessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
